
import sqlite3
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.ticker import MaxNLocator

def join_and_analyze():
    conn = sqlite3.connect("final_project.db")

    df_approval = pd.read_sql("SELECT * FROM GallupApproval", conn)
    df_news = pd.read_sql("SELECT * FROM NewsSentiment", conn)

    df_approval['date'] = pd.to_datetime(df_approval['date'])
    df_news['published_date'] = pd.to_datetime(df_news['published_date'])

    print("NewsSentiment Date Range:", df_news['published_date'].min(), "to", df_news['published_date'].max())
    
    df_news_grouped = df_news.groupby('published_date')['sentiment_score'].mean().reset_index()
    df_approval_grouped = df_approval.groupby('date')['approval_rating'].mean().reset_index()

    df_news_resampled = df_news_grouped.set_index('published_date').resample('D').mean()
    df_news_resampled['sentiment_score'].fillna(method='ffill', inplace=True)

    merged = pd.merge(df_approval_grouped, df_news_resampled, left_on='date', right_index=True, how='left')

    merged = merged.sort_values('date')

    print(f"Total days (data points): {len(merged)}")

    merged.to_csv("/Users/kayleeboudrie/SI206Final/sentiment_output.txt", index=False)

    return merged

def create_visualizations(df):
    dates = df['date'].dt.strftime('%Y-%m-%d')
    x = list(range(len(dates)))

    print(f"Number of data points to plot: {len(dates)}")

    plt.figure(figsize=(40, 10))
    plt.plot(x, df['approval_rating'], label="Approval Rating", color='red', marker='o')

    ax = plt.gca()
    ax.xaxis.set_major_locator(MaxNLocator(nbins=len(dates)))

    plt.xticks(ticks=x, labels=dates, rotation=90, fontsize=6)

    plt.title("Trump: Sentiment vs Approval Over Time (Per Day)")
    plt.xlabel("Date")
    plt.ylabel("Score")
    plt.legend()
    plt.tight_layout()

    plt.savefig("/Users/kayleeboudrie/SI206Final/comparison_plot.png")
    plt.show()

if __name__ == "__main__":
    df = join_and_analyze()
    create_visualizations(df)
